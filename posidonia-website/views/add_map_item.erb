<%= erb :header %>
<%= erb :leaflet %>
<style>
 body {
    background-image: none;
    overflow-x:hidden;
    overflow-y:hidden;
 }
 nav {
    background-size: cover;
    z-index: 999;
    background-position: center;
    width: 100%;
    height: 100%;
    background-image:url('/Posidonia.png');
}
div nav {
    z-index: 1000;
}
.gonderbtn {
    z-index: 999999999;
}

.gonderbtn:hover {
    cursor:pointer;
}
</style>
</head>
<body>
<%= erb :navbar %>
<hr>
<div class="w-screen h-[100vh]" id="map_id">
    <div id="gonderbtn" class="leaflet-top leaflet-right block mx-2 my-4 px-4 py-3 mb-2 leading-loose text-xs text-center text-white font-semibold bg-blue-600 hover:bg-blue-700  rounded-xl" ion-button onclick="send_region()">
        ALANI KARANTİNA ALTINA AL!
    </div>
</div>
<%#
    IT'S FOR SENDING POPUP
%>
<div  class="overflow-y-auto sm:p-0 pt-4 pr-4 pb-20 pl-4 bg-gray-800">
  <div class="flex justify-center items-end text-center min-h-screen sm:block">
    <div class="bg-gray-500 transition-opacity bg-opacity-75"></div>
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen">​</span>
    <div class= "inline-block text-left bg-gray-900 rounded-lg overflow-hidden align-bottom transition-all transform
        shadow-2xl sm:my-8 sm:align-middle sm:max-w-xl sm:w-full">
      <div class="items-center w-full mr-auto ml-auto relative max-w-7xl md:px-12 lg:px-24">
        <div class="grid grid-cols-1">
          <div class="mt-4 mr-auto mb-4 ml-auto bg-gray-900 max-w-lg">
            <div class="flex flex-col items-center pt-6 pr-6 pb-6 pl-6">
              <img
                  src="https://images.pexels.com/photos/2379005/pexels-photo-2379005.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;w=500" class="flex-shrink-0 object-cover object-center btn- flex w-16 h-16 mr-auto -mb-8 ml-auto rounded-full shadow-xl">
              <p class="mt-8 text-2xl font-semibold leading-none text-white tracking-tighter lg:text-3xl">Mark
                  Xenon</p>
              <p class="mt-3 text-base leading-relaxed text-center text-gray-200">I am a fullstack software developer
                  with ReactJS for frontend and NodeJS for backend</p>
              <div class="w-full mt-6">
                <a class="flex text-center items-center justify-center w-full pt-4 pr-10 pb-4 pl-10 text-base
                    font-medium text-white bg-indigo-600 rounded-xl transition duration-500 ease-in-out transform
                    hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">Hire
                    me</a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
    //@description: defitions of colors and markers;
    const redIcon = new L.Icon({
        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-red.png',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });

    const greenIcon = new L.Icon({
        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
    });

    const RED_COLOR = "#E62315";
    const GREEN_COLOR = "#4DC412";

    //@descripions: locations array for sendig backend to prepare polygons
    let locations =  [];

    var setViewLatLng = new L.LatLng(38.670766, 26.746846);
    var map = L.map('map_id').setView(setViewLatLng, 9)
    let googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
        maxZoom: 30,
        attribution: 'Posidonia Oceinaca Koruma Haritası | &copy; 2024. All rights reserved.',
        subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
    });
    googleSat.addTo(map);

    async function get_address(lat,lng) {
        const response = await fetch('http://localhost:8008/getAddr', {
            method: "POST",
            body: JSON.stringify({
                lat: lat,
                lng: lng
            }),
            headers: {
                'Content-Type': 'application/json'
            }
        })
        const jsonData = await response.json();
        return jsonData;
    }

    map.on('click', async function(event) {
        let coordinates = event.latlng;
        if (coordinates) {
            let latitude = coordinates.lat;
            let longitude = coordinates.lng;

            locations.push([latitude, longitude]);
            let result = await get_address(latitude, longitude);
            let popup = L.popup()
                        .setContent(`Koordinatların, Enlem: ${latitude}, Boylam: ${longitude} | ${result['addr']}`);

            let marker =  L.marker(coordinates, { icon: greenIcon })
                            .bindPopup(popup)
                            .addTo(map).openPopup();

        } else {
            alert("Koordinatlar alınamadı!!!");
        }
    });

    const gonderbtn = document.querySelector('#gonderbtn');

    async function send_region(){
        if (locations.length < 3)
        {
            window.alert(`Lütfen karantina altına alınmasını istediğiniz bölgeler için en az 3 nokta seçiniz.\nSeçtiğiniz:${locations.length}\nGeri kalan:${3 - locations.length}`)
        }
        else {
            fetch(``, {
              method: "POST",
              body: JSON.stringify(locations)
            })
            .then(data => data.json())
            .catch(err => console.error(err))
        }

    }
    gonderbtn.addEventListener('click', send_region);

    L.Control.Watermark = L.Control.extend({
        onAdd: function(map) {
            var button = L.DomUtil.create('button');
            button.textContent = "Alanı karantina altına al!";
            button.classList.add("leaflet-top", "leaflet-right", "block", "mx-2", "my-4", "px-4", "py-3", "mb-2","leading-loose", "text-xs", "text-center", "text-white", "font-semibold", "bg-blue-600", "hover:bg-blue-700",  "rounded-xl");

            return button;
        },
        onRemove: function(map) {}
    });

    L.Control.Watermark = function(opts) {
        return new L.Control.Watermark(opts);
    }

    L.Control.Watermark({ position: 'bottomleft' }).addTo(map);
</script>
</body>
</html>
